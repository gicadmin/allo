CREATE OR REPLACE PACKAGE phenix.LOG_ERROR_PACK IS

PROCEDURE CLOSE_LOG_PROC
 (P_FILE IN UTL_FILE.FILE_TYPE
 ,P_SIZE IN NUMBER
 ,P_ROWS IN NUMBER
 ,P_ROWS_LOADED IN NUMBER
 ,P_BAD_ROWS IN NUMBER
 ,P_SKIPPED_ROWS IN NUMBER
 ,P_FILE_NAME IN VARCHAR2
 ,P_ERROR IN BOOLEAN := TRUE
 );
FUNCTION CREATE_LOG_FUNC
 (P_SQL_PACK IN VARCHAR2
 ,P_SQL_NAME IN VARCHAR2
 ,P_FILE_PATH_IN IN VARCHAR2
 ,P_FILE_NAME_IN IN VARCHAR2
 ,P_FILE_PATH_OUT IN VARCHAR2
 ,P_FILE_NAME_OUT IN VARCHAR2
 ,P_LOG_NAME OUT VARCHAR2
 )
 RETURN UTL_FILE.FILE_TYPE;
PROCEDURE WRITE_LOG_LINE_PROC
 (P_LINE_NUMBER IN NUMBER
 ,P_LINE IN VARCHAR2
 ,P_FILE IN UTL_FILE.FILE_TYPE
 );
FUNCTION START_LOG_FUNC
 (P_MODULE_NAME IN VARCHAR2
 ,P_MODULE_TYPE IN VARCHAR2
 ,P_FILE_NAME_IN IN VARCHAR2
 ,P_FILE_NAME_OUT IN VARCHAR2
 ,P_MESSAGE IN VARCHAR2
 )
RETURN NUMBER;
FUNCTION START_LOG_FUNC	--fonction corrigé pour pas retourné le code d'erreur comme si cétait un log_id
 (P_MODULE_NAME IN VARCHAR2
 ,P_MODULE_TYPE IN VARCHAR2
 ,P_FILE_NAME_IN IN VARCHAR2
 ,P_FILE_NAME_OUT IN VARCHAR2
 ,P_MESSAGE IN VARCHAR2
 ,P_LOH_ID OUT NUMBER
 ,P_ERROR_CODE OUT NUMBER
 ,P_ERROR_MSG OUT VARCHAR2
 )
RETURN boolean;
PROCEDURE DETAIL_LOG_PROC
 (P_LOH_ID IN NUMBER
 ,P_LINE_NUMBER IN NUMBER
 ,P_MESSAGE IN VARCHAR2
 ,P_ERROR IN VARCHAR2
 );
PROCEDURE END_LOG_PROC
 (P_LOH_ID IN NUMBER
 ,P_MESSAGE IN VARCHAR2
 );
PROCEDURE STANDARDIZE_LOG_MESSAGE_PROC
 (P_JSC_ID IN NUMBER
 );
END LOG_ERROR_PACK;

 
/